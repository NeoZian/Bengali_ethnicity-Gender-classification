# -*- coding: utf-8 -*-
"""mobileNet_bd.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V8zR9Xdi3EJsd4CgOGOmykHSeXzYewxA
"""



from google.colab import drive
drive.mount('/content/drive')

cd /content/drive/My Drive/dataset

ls

cp Bengali_img.zip /content/data

cd /content/

ls

cd data

ls

!unzip Bengali_img.zip

ls

pwd

import pandas as pd
import numpy as np
import os
import keras
import matplotlib.pyplot as plt
from keras.layers import Dense,GlobalAveragePooling2D
from keras.applications import MobileNet
from keras.preprocessing import image
from keras.applications.mobilenet import preprocess_input
from keras.preprocessing.image import ImageDataGenerator
from keras.models import Model
from keras.optimizers import Adam

base_model=MobileNet(weights='imagenet',include_top=False) #imports the mobilenet model and discards the last 1000 neuron layer.

x=base_model.output
x=GlobalAveragePooling2D()(x)
x=Dense(1024,activation='relu')(x) #we add dense layers so that the model can learn more complex functions and classify for better results.
x=Dense(1024,activation='relu')(x) #dense layer 2
x=Dense(512,activation='relu')(x) #dense layer 3
preds=Dense(2,activation='softmax')(x) #final layer with softmax activation

model=Model(inputs=base_model.input,outputs=preds)
#specify the inputs
#specify the outputs
#now a model has been created based on our architecture

for layer in model.layers[:20]:
    layer.trainable=False
for layer in model.layers[20:]:
    layer.trainable=True

train_datagen=ImageDataGenerator(preprocessing_function=preprocess_input) #included in our dependencies

train_generator=train_datagen.flow_from_directory('Bengali Ethnicity', # this is where you specify the path to the main data folder
                                                 target_size=(224,224),
                                                 color_mode='rgb',
                                                 batch_size=32,
                                                 class_mode='categorical',
                                                 shuffle=True)

model.compile(optimizer='Adam',loss='categorical_crossentropy',metrics=['accuracy'])
# Adam optimizer
# loss function will be categorical cross entropy
# evaluation metric will be accuracy

step_size_train=train_generator.n//train_generator.batch_size
model.fit_generator(generator=train_generator,
                   steps_per_epoch=step_size_train,
                   epochs=5)

model.save('mobBD.h5')

model.save('mobBD.model')

from keras.preprocessing import image

test = image.load_img('Bengali Ethnicity/Bengali Female/0001.jpg',
                      target_size=(224, 224))
test = image.img_to_array(test)
test = np.expand_dims(test, axis=0)

print(model.predict(test))
print(train_generator.class_indices)
#actually female

from keras.preprocessing import image

test = image.load_img('Bengali Ethnicity/Bengali Female/68302657.jpg',
                      target_size=(224, 224))
test = image.img_to_array(test)
test = np.expand_dims(test, axis=0)

print(model.predict(test))
print(train_generator.class_indices)
#actually female

from keras.preprocessing import image

test = image.load_img('Bengali Ethnicity/Bengali Male/10R.jpg',
                      target_size=(224, 224))
test = image.img_to_array(test)
test = np.expand_dims(test, axis=0)

print(model.predict(test))
print(train_generator.class_indices)
#actually male

from keras.preprocessing import image

test = image.load_img('Bengali Ethnicity/Bengali Male/bangladeshi young men.jpg',
                      target_size=(224, 224))
test = image.img_to_array(test)
test = np.expand_dims(test, axis=0)

print(model.predict(test))
print(train_generator.class_indices)
#actually male

from keras.preprocessing import image

test = image.load_img('Bengali Ethnicity/Bengali Female/11454888.jpg',
                      target_size=(224, 224))
test = image.img_to_array(test)
test = np.expand_dims(test, axis=0)

print(model.predict(test))
print(train_generator.class_indices)
#actually female

